---
import { Icon } from "astro-icon";
import ThemeSwitcher from "~/components/theme-switcher.astro";
import { RESUME_URL } from "~/data/contants";

const navItems = [
  { title: "About", url: "#about" },
  { title: "Tech", url: "#tech-stack" },
  { title: "Showcase", url: "#showcase" },
  { title: "Contact", url: "#contact"}
];
---
<header
  id="page-header"
  class="absolute bottom-0 z-10 flex items-center justify-between w-full px-8 py-4 text-white border-b border-transparent"
>
  <a class="flex flex-row items-center gap-3 hover:!text-default" href="#">
    <h1 class="sr-only">Tashif Ferdous</h1>
    <h1 class="font-sans font-bold tracking-tighter text-secondary">TF</h1>
    <h1 class="hidden font-mono lg:block text-primary">Tashif Ferdous</h1>
  </a>
  <div>
    <div class="flex flex-row items-center gap-6">
      <nav class="hidden md:block">
        <div class="flex items-center gap-4">
          <ul class="flex items-center gap-6">
            {
              navItems.map(({ title, url }, index) => (
                <li>
                    <a class="font-mono text-sm text-primary" href={url}>
                        <span class="text-secondary">{String(index+1).padStart(2, '0')}. </span> {title}
                    </a>
                </li>
              ))
            }
          </ul>
          <!-- socials links -->
          <a class="pl-2 text-primary" href="https://github.com/tashif-ferdous" target="_blank">
            <Icon name="socials/github" class="h-6" />
          </a>
          <a class="text-primary" href="https://www.linkedin.com/in/tferd/" target="_blank">
            <Icon name="socials/linkedin" class="h-6" />
          </a> 
          <a class="text-primary" href={RESUME_URL} target="_blank">
            <Icon name="socials/file-text" class="h-8" />
          </a>   
        </div>
      </nav>
      <button
        id="open-nav-button"
        type="button"
        class="btn md:hidden"
        aria-label="Navigation"
      >
        <Icon pack="mdi" name="menu" class="h-8" />
      </button>
      <ThemeSwitcher />
    </div>
    <div id="menu-modal" class="hidden modal" aria-hidden="true">
      <div class="fixed inset-0 px-8 py-4 bg-default text-default">
        <div class="space-y-4" role="dialog" aria-modal="true">
          <header class="text-right">
            <button
              id="close-nav-button"
              type="button"
              class="btn"
              aria-label="Close navigation"
            >
              <Icon pack="mdi" name="close" class="h-8" />
            </button>
          </header>
          <div class="flex justify-center">
            <h1 class="font-sans font-bold text-4xl tracking-tighter gradient-text-purple">
              Tashif Ferdous
            </h1> 
          </div>
          <nav>
            <!-- socials links -->
            <div class="flex flex-row justify-center space-x-4 p-4">
              <a class="text-primary" href="https://github.com/tashif-ferdous" target="_blank">
                <Icon name="socials/github" class="h-8" />
              </a>
              <a class="text-primary" href="https://www.linkedin.com/in/tferd/" target="_blank">
                <Icon name="socials/linkedin" class="h-8" />
              </a>   
              <a class="text-primary" href={RESUME_URL} target="_blank">
                <Icon name="socials/file-text" class="h-8" />
              </a>   
            </div>
            <ul class="flex flex-col">
              {
                navItems.map(({ title, url }, index) => (
                  <li>
                    <a class="block py-4 px-6 font-mono text-primary text-xl" href={url}>
                      #{String(index+1).padStart(2, '0')}. {title}
                    </a>
                  </li>
                ))
              }
            </ul>
          </nav>
        </div>
      </div>
    </div>
  </div>
</header>

<script>
  import MicroModal from "micromodal";

  const menuModalId = "menu-modal";

  const header: HTMLElement = document.querySelector("#page-header");
  const page = document.documentElement;
  const menu = document.querySelector(`#${menuModalId} ul`);
  const openNavButton = document.querySelector("#open-nav-button");
  const closeNavButton = document.querySelector("#close-nav-button");

  const openMenu = () => {
    MicroModal.show(menuModalId, { disableScroll: true });
  };

  const closeMenu = () => {
    MicroModal.close(menuModalId);
  };

  openNavButton.addEventListener("click", openMenu);
  closeNavButton.addEventListener("click", closeMenu);

  document.addEventListener("scroll", () => {
    const d = page.clientHeight - page.scrollTop - header.offsetHeight;
    header.classList.toggle("fixed-header", d < 0);
  });

  menu.addEventListener("click", (event) => {
    if ((event.target as HTMLElement).tagName === "A") {
      closeMenu();
    }
  });
</script>

<noscript>
  <style>
    #open-nav-button {
      display: none;
    }
  </style>
</noscript>

<style>
  .fixed-header {
    @apply fixed top-0 bottom-auto;
    @apply text-default bg-default border-default;
  }
  .modal.is-open {
    @apply block;
  }
</style>
